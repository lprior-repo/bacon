name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build Lambda Functions
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        cache: true

    - name: Install Mage
      run: go install github.com/magefile/mage@latest

    - name: Run CI pipeline (Clean, Lint, Test, Build)
      run: mage ci
      env:
        GOOS: linux
        GOARCH: amd64

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lambda-binaries
        path: src/*/lambda/*/main
        retention-days: 7

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Validate
      run: terraform validate
      working-directory: terraform

    - name: Terraform Plan
      run: terraform plan -var="namespace=${{ github.head_ref || github.ref_name }}" -no-color
      working-directory: terraform
      env:
        TF_VAR_aws_region: us-east-1
        TF_VAR_project_name: beacon

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: [build, terraform-plan]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: lambda-binaries
        path: src/

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: us-east-1

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Apply
      run: terraform apply -var="namespace=prod" -auto-approve
      working-directory: terraform
      env:
        TF_VAR_aws_region: us-east-1
        TF_VAR_project_name: beacon