name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  GO_VERSION: "1.24.5"
  NODE_VERSION: "20"
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  # Core application jobs using reusable workflows
  build:
    name: Build
    uses: ./.github/workflows/reusable/build.yml
    with:
      go-version: "1.24.5"
      node-version: "20"

  test:
    name: Test
    uses: ./.github/workflows/reusable/test.yml
    with:
      go-version: "1.24.5"
      node-version: "20"

  lint:
    name: Lint
    uses: ./.github/workflows/reusable/lint.yml
    with:
      go-version: "1.24.5"
      node-version: "20"

  # Terraform jobs using reusable workflow
  terraform-format:
    name: Terraform Format Check
    uses: ./.github/workflows/reusable/terraform.yml
    with:
      terraform-action: "format-check"
      node-version: "20"

  terraform-validate:
    name: Terraform Validate
    uses: ./.github/workflows/reusable/terraform.yml
    with:
      terraform-action: "validate"
      node-version: "20"

  terraform-plan:
    name: Terraform Plan
    uses: ./.github/workflows/reusable/terraform.yml
    with:
      terraform-action: "plan"
      node-version: "20"
    # Only run plan on main branch pushes to avoid credential issues on PRs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

  terraform-security:
    name: Terraform Security Scan
    uses: ./.github/workflows/reusable/terraform.yml
    with:
      terraform-action: "security-scan"
      node-version: "20"

  # Consolidation job to ensure all jobs succeeded
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [build, test, lint, terraform-format, terraform-validate, terraform-security]
    # Include terraform-plan only if it was run
    if: always()
    steps:
    - name: Check all jobs succeeded
      run: |
        # Check required jobs
        if [[ "${{ needs.build.result }}" != "success" || \
              "${{ needs.test.result }}" != "success" || \
              "${{ needs.lint.result }}" != "success" || \
              "${{ needs.terraform-format.result }}" != "success" || \
              "${{ needs.terraform-validate.result }}" != "success" || \
              "${{ needs.terraform-security.result }}" != "success" ]]; then
          echo "❌ CI pipeline failed!"
          exit 1
        fi
        
        # Check terraform-plan if it was supposed to run
        if [[ "${{ github.ref }}" == "refs/heads/main" && "${{ github.event_name }}" == "push" ]]; then
          if [[ "${{ needs.terraform-plan.result }}" != "success" ]]; then
            echo "❌ Terraform plan failed!"
            exit 1
          fi
        fi
        
        echo "✅ All CI tasks completed successfully!"