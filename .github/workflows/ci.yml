name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  GO_VERSION: "1.24.5"
  NODE_VERSION: "20"

jobs:
  # Lint and format checks
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Install Mage
      run: go install github.com/magefile/mage@latest

    - name: Run linting
      run: mage lint

    - name: Run mod tidy
      run: mage modtidy

  # Build all Lambda functions in parallel
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Install Mage
      run: go install github.com/magefile/mage@latest

    - name: Build Lambda functions
      run: mage build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lambda-binaries
        path: src/**/lambda/*/main

  # Unit tests with coverage
  test-unit:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Install Mage
      run: go install github.com/magefile/mage@latest

    - name: Run unit tests
      run: mage testunit

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: always()
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-unit-tests

  # Turborepo integration test
  turbo-build:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install Node dependencies
      run: npm ci

    - name: Cache Turbo
      uses: actions/cache@v4
      with:
        path: .turbo
        key: ${{ runner.os }}-turbo-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-turbo-

    - name: Run Turborepo build
      run: npm run build

  # Security scanning
  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Run gosec security scan
      run: |
        go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
        gosec -fmt sarif -out gosec-report.sarif ./...

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: gosec-report.sarif

  # Contract tests (infrastructure validation)
  test-contract:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    env:
      AWS_REGION: us-east-1
      TF_VAR_namespace: ci-${{ github.run_number }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Install Mage
      run: go install github.com/magefile/mage@latest

    - name: Run contract tests
      run: mage testcontract

  # End-to-end tests (full deployment)
  test-e2e:
    runs-on: ubuntu-latest
    needs: [build, test-unit, test-contract]
    if: github.event_name == 'pull_request'
    env:
      AWS_REGION: us-east-1
      TF_VAR_namespace: e2e-${{ github.run_number }}
      EPHEMERAL_ENV: true
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Install Mage
      run: go install github.com/magefile/mage@latest

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: lambda-binaries
        path: src/

    - name: Run end-to-end tests
      run: mage teste2e