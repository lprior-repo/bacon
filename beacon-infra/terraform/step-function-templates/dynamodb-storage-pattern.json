{
  "StoreResultsInDynamoDB": {
    "Type": "Task",
    "Comment": "Store scraped data in DynamoDB cache table with TTL",
    "Resource": "arn:aws:states:::aws-sdk:dynamodb:putItem",
    "QueryLanguage": "JSONata",
    "Arguments": {
      "TableName": "{% $states.input.cacheTableName ? $states.input.cacheTableName : 'aws-scraper-cache' %}",
      "Item": {
        "pk": {"S": "{% 'SCRAPE_CACHE#' & $states.input.accountId %}"},
        "sk": {"S": "{% $states.input.serviceType & '#LATEST' %}"},
        "scraperId": {"S": "{% $states.input.scraperId %}"},
        "serviceType": {"S": "{% $states.input.serviceType %}"},
        "accountId": {"S": "{% $states.input.accountId %}"},
        "lastScraped": {"S": "{% $millis() ~> $string %}"},
        "${DATA_FIELD}": {"S": "{% $string($states.input.data) %}"},
        "summary": {"S": "{% $string($states.input.summary) %}"},
        "ttl": {"N": "{% ($millis() + ${TTL_MS}) ~> $string %}"}
      }
    },
    "Output": "{% $merge([$states.input, {'cacheStored': true, 'cacheKey': 'SCRAPE_CACHE#' & $states.input.accountId & '#' & $states.input.serviceType}]) %}",
    "Catch": [
      {
        "ErrorEquals": ["States.ALL"],
        "Output": "{% $merge([$states.input, {'cacheError': $states.errorOutput, 'cacheStored': false}]) %}",
        "Next": "${NEXT_STATE}"
      }
    ],
    "Next": "${NEXT_STATE}"
  }
}